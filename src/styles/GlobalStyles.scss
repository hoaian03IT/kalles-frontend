@use "variables" as *;
@use "sass:map";

@import url("https://fonts.googleapis.com/css2?family=Kanit:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
    font-family: "Kanit", sans-serif !important;
}

.btn {
    border-radius: 0 !important;
    &-primary {
        position: relative;
        background-color: $black-color !important;
        border-color: $black-color !important;
        overflow: hidden;

        &::after {
            position: absolute;
            content: "";
            left: 0;
            top: 0;
            bottom: 0;
            right: 100%;
            background-color: rgba($color: $white-color, $alpha: 0.1);
            transition: right 0.2s linear;
        }
        &:hover::after {
            right: 0;
        }
    }
    &-round-border {
        border-radius: $btn-radius !important;
        &::after {
            border-radius: $btn-radius !important;
        }
    }
    &-secondary {
        background-color: $gray-color !important;
        color: rgba($color: $black-color, $alpha: 0.8) !important;
        border-color: #e7e7e7 !important;
        &:hover {
            background-color: $black-color !important;
            color: $gray-color !important;
        }
    }
    &-size-md {
        height: $btn-md-height;
        padding-left: 1rem !important;
        padding-right: 1rem !important;
    }
    &-size-lg {
        height: $btn-lg-height;
        padding-left: 2rem !important;
        padding-right: 2rem !important;
    }
    @media (max-width: calc(map.get($grid-breakpoints, md) - 1px)) {
        &-size-lg {
            max-height: calc($btn-lg-height - 10px);
        }
        &-size-md {
            height: calc($btn-md-height - 10px);
        }
    }
}

.cursor-pointer {
    cursor: pointer;
}

input[type="checkbox"] {
    height: 1rem;
    width: 1rem;
    accent-color: $black-color;
}

// Custom carousel
.carousel {
    .carousel-indicators button {
        height: 8px;
        width: 8px;
        border: 5px;
        border-radius: 5px;
        background-color: rgba($color: $black-color, $alpha: 0.5);
        transition: all 0.3s ease-out;
        &.active {
            background-color: $black-color;
            width: 30px;
        }
    }

    & .carousel-control-prev,
    & .carousel-control-next {
        color: $black-color !important;
        font-size: 1.5rem;
        opacity: 0 !important;
        transition: all 0.2s linear;
        @media (max-width: calc(map.get($grid-breakpoints, md) - 1px)) {
            display: none;
        }
    }
    &:hover .carousel-control-prev,
    &:hover .carousel-control-next {
        opacity: 1 !important;
    }
}

.animation-slide-up {
    animation: slideUp 2s linear;
    display: none;

    .active & {
        display: block;
    }
}

.animation-slide-down {
    animation: slideDown 1s ease-out;
    display: none;

    .active & {
        display: block;
    }
}

.animation-slide-rl {
    animation: slideRightToLeft 1s ease-in;
    display: none;

    .active & {
        display: block;
    }
}

// limit-line
@for $i from 1 through 10 {
    .limit-line-#{$i} {
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: $i; /* number of lines to show */
        line-clamp: $i;
        -webkit-box-orient: vertical;
    }
}
