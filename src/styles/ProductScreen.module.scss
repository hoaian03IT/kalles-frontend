@use "variables" as *;
@use "sass:map";

.wrapper {
    .category {
        margin: 0 1rem;
        text-decoration: none;
        .title {
            font-weight: 400;
            color: $black-color;
            transition: color 0.3s;

            &:hover,
            &.active {
                color: $hover-blue-color;
            }
        }
    }
    .actions {
        .filter {
            button {
                background-color: $white-color;
                border: none;
                outline: none;
                display: flex;
                align-items: center;
                color: rgba($color: $black-color, $alpha: 0.5);
                cursor: pointer;
                transition: color 0.3s;

                &:hover {
                    color: $black-color;
                }
            }
        }
        .layouts {
            display: flex;
            align-items: center;

            .layout-button {
                margin: 0 0.4rem;
                padding: 0.2rem;
                display: flex;
                align-items: center;
                justify-content: center;
                color: rgba($color: $black-color, $alpha: 0.5);
                border: 1px solid currentColor;
                outline: none;
                transition: color 0.3s;

                &:hover,
                &.active {
                    color: $black-color;
                }
            }
        }
        .ordered {
            .selected {
                max-width: 200px;
                min-width: 180px;
            }
            .selected-mobile {
                display: none;
                padding: 2px 8px;
                border: none;
                background-color: $white-color;
                border-radius: 8px;
            }
        }
    }
}

@media (max-width: calc(map.get($grid-breakpoints, md) - 1px)) {
    .wrapper {
        .layouts {
            .layout-button:nth-of-type(2),
            .layout-button:nth-of-type(3) {
                display: none;
            }
        }
        .ordered {
            .selected {
                display: none;
            }
            .selected-mobile {
                display: flex !important;
            }
        }
    }
}
